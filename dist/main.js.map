{"version":3,"sources":["main.js"],"names":["EasyAjax","baseUrl","xhr","XMLHttpRequest","query","makeRequest","call","data","type","Promise","resolve","reject","open","addEventListener","ev","response","parseResponse","target","error","makeError","send","result","undefined","JSON","parse","e","console","log","Error","name","message"],"mappings":";;;;;;AAAA,IAAIA,WAAY,YAAW;AAAA,KACpBA,QADoB;AAEzB,oBAAYC,OAAZ,EAAqB;AAAA;;AACpB,QAAKA,OAAL,GAAeA,OAAf;AACA,QAAKC,GAAL,GAAW,IAAIC,cAAJ,EAAX;AACA;;AALwB;AAAA;AAAA,uBAOrBC,KAPqB,EAOd;AACV,WAAOC,YAAYC,IAAZ,CAAiB,IAAjB,EAAuB,KAAvB,EAA8BF,KAA9B,CAAP;AACA;AATwB;AAAA;AAAA,wBAWpBA,KAXoB,EAWbG,IAXa,EAWP;AACjB,WAAOF,YAAYC,IAAZ,CAAiB,IAAjB,EAAuB,MAAvB,EAA+BF,KAA/B,EAAsCG,IAAtC,CAAP;AACA;AAbwB;AAAA;AAAA,uBAerBH,KAfqB,EAedG,IAfc,EAeR;AAChB,WAAOF,YAAYC,IAAZ,CAAiB,IAAjB,EAAuB,KAAvB,EAA8BF,KAA9B,EAAqCG,IAArC,CAAP;AACA;AAjBwB;AAAA;AAAA,8BAmBdN,OAnBc,EAmBL;AACnB,SAAKA,OAAL,GAAeA,OAAf;AACA;AArBwB;;AAAA;AAAA;;AAwB1B,UAASI,WAAT,CAAqBG,IAArB,EAAoD;AAAA;;AAAA,MAAzBJ,KAAyB,yDAAjB,EAAiB;AAAA,MAAbG,IAAa,yDAAN,IAAM;;AACnD,SAAO,IAAIE,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACvC,OAAIT,MAAM,MAAKA,GAAf;AACAA,OAAIU,IAAJ,CAASJ,IAAT,EAAe,MAAKP,OAAL,GAAeG,KAA9B,EAAqC,IAArC;AACAF,OAAIW,gBAAJ,CAAqB,MAArB,EAA6B,UAASC,EAAT,EAAa;AACzC,QAAIC,WAAWC,cAAcF,GAAGG,MAAH,CAAUF,QAAxB,CAAf;AACAL,YAAQK,QAAR;AACA,IAHD;AAIAb,OAAIW,gBAAJ,CAAqB,OAArB,EAA8B,UAAUC,EAAV,EAAc;AAC3C,QAAII,QAAQC,UAAUL,GAAGG,MAAb,CAAZ;AACAN,WAAOO,KAAP;AACA,IAHD;;AAKA,OAAGV,SAAS,MAAT,IAAmBA,SAAS,KAA/B,EACCN,IAAIkB,IAAJ,CAASb,IAAT,EADD,KAEK,IAAGC,SAAS,KAAT,IAAkBA,SAAS,QAA9B,EACJN,IAAIkB,IAAJ,CAAS,IAAT;AACD,GAhBM,CAAP;AAiBA;;AAED,UAASJ,aAAT,CAAuBD,QAAvB,EAAiC;AAChC,MAAIM,SAASC,SAAb;AACA,MAAI;AACHD,YAASE,KAAKC,KAAL,CAAWT,QAAX,CAAT;AACA,GAFD,CAEE,OAAMU,CAAN,EAAS;AACVJ,YAASN,QAAT;AACAW,WAAQC,GAAR,CAAY,SAAZ,EAAuBF,CAAvB,EAA0BJ,MAA1B;AACA;AACD,SAAOA,MAAP;AACA;;AAED,UAASF,SAAT,CAAmBZ,IAAnB,EAAyB;AACxB,MAAIW,QAAQ,IAAIU,KAAJ,EAAZ;AACAV,QAAMW,IAAN,GAAa,UAAb;AACAX,QAAMY,OAAN,GAAgB,eAAhB;AACAZ,QAAMX,IAAN,GAAaA,IAAb;AACA,SAAOW,KAAP;AACA;;AAED,QAAOlB,QAAP;AACA,CAhEc,EAAf","file":"main.js","sourcesContent":["let EasyAjax = (function() {\n\tclass EasyAjax {\n\t\tconstructor(baseUrl) {\n\t\t\tthis.baseUrl = baseUrl;\n\t\t\tthis.xhr = new XMLHttpRequest();\n\t\t}\n\n\t\tget(query) {\n\t\t\treturn makeRequest.call(this, 'GET', query);\n\t\t}\n\n\t\tpost(query, data) {\n\t\t\treturn makeRequest.call(this, 'POST', query, data);\n\t\t}\n\n\t\tput(query, data) {\n\t\t\treturn makeRequest.call(this, 'PUT', query, data);\n\t\t}\n\n\t\tsetBaseUrl(baseUrl) {\n\t\t\tthis.baseUrl = baseUrl;\n\t\t}\n\t}\n\n\tfunction makeRequest(type, query = '', data = null) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet xhr = this.xhr;\n\t\t\txhr.open(type, this.baseUrl + query, true);\n\t\t\txhr.addEventListener('load', function(ev) {\n\t\t\t\tlet response = parseResponse(ev.target.response);\n\t\t\t\tresolve(response);\n\t\t\t});\n\t\t\txhr.addEventListener('error', function (ev) {\n\t\t\t\tlet error = makeError(ev.target);\n\t\t\t\treject(error);\n\t\t\t});\n\t\t\n\t\t\tif(type === 'POST' || type === 'PUT')\n\t\t\t\txhr.send(data);\t\n\t\t\telse if(type === 'GET' || type === 'DELETE')\t\n\t\t\t\txhr.send(null);\n\t\t});\n\t}\n\n\tfunction parseResponse(response) {\n\t\tlet result = undefined;\n\t\ttry {\n\t\t\tresult = JSON.parse(response);\n\t\t} catch(e) {\n\t\t\tresult = response;\n\t\t\tconsole.log('Error: ', e, result);\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction makeError(data) {\n\t\tlet error = new Error();\n\t\terror.name = 'UrlError';\n\t\terror.message = 'Incorrect URL';\n\t\terror.data = data;\n\t\treturn error;\n\t}\n\n\treturn EasyAjax;\n})();\n"],"sourceRoot":"/source/"}